"""
Django settings for bibliophile project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import secrets
import sys
from pathlib import Path
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY") or secrets.token_urlsafe(32)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG") or False

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS") or ["*"]

CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS") or ["http://localhost:1339", "http://*"]

# Application definition

INSTALLED_APPS = [
    "website.apps.WebsiteConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "bibliophile.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # "BACKEND": "django.forms.renderers.Jinja2",
        "DIRS": [
            BASE_DIR / "website" / "templates",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            # 'environment': 'website.jinja2.environment'
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

LOCALE_PATHS = (BASE_DIR / "website" / "locale",)

STATIC_ROOT = BASE_DIR / "static"

WSGI_APPLICATION = "bibliophile.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

ENGINE = os.getenv("DEBUG")
if ENGINE and os.getenv("DEBUG").endswith("postgresql"):
    DATABASES = {
        "default": {
            "ENGINE": ENGINE,
            "NAME": os.getenv("DB_NAME") or "bibliophile_db",
            "USER": os.getenv("POSTGRES_USER") or "bibliophile_user",
            "PASSWORD": os.getenv("POSTGRES_PASSWORD") or "1234567890=",
            "HOST": os.getenv("DB_HOST") or "localhost",
            "PORT": os.getenv("DB_PORT") or "5432",
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

if (
    "test" in sys.argv or "test_coverage" in sys.argv
):  # Covers regular testing and django-coverage
    DATABASES["default"]["ENGINE"] = "django.db.backends.sqlite3"
    # DATABASES['default']['NAME'] = BASE_DIR / "test_db.sqlite3"
    if "--keepdb" in sys.argv:
        DATABASES["default"]["TEST"]["NAME"] = BASE_DIR / "test_db.sqlite3"

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"
# LANGUAGE_CODE = "ru"
LANGUAGES = (
    ("en-us", _("English")),
    ("ru", _("Russian")),
)
TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
